[build-system]
requires = ["setuptools>=66.1", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "graphix"
authors = [{ name = "Shinichi Sunami", email = "shinichi.sunami@gmail.com" }]
maintainers = [
  { name = "Shinichi Sunami", email = "shinichi.sunami@gmail.com" },
]
license = { file = "LICENSE" }
description = "Optimize and simulate measurement-based quantum computation"
readme = "README.md"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering :: Physics",
]
requires-python = ">=3.8,<3.13"
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
Documentation = "https://graphix.readthedocs.io"
"Bug Tracker" = "https://github.com/TeamGraphix/graphix/issues"

[tool.setuptools_scm]
version_file = "graphix/_version.py"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements-dev.txt"] }
extra = { file = ["requirements-extra.txt"] }

[tool.ruff]
line-length = 120
extend-exclude = ["docs"]

[tool.ruff.lint]
preview = true
select = ["ALL"]
extend-ignore = [
  # Maintained by formatter
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",

  # Rulesets
  "ANN",
  "ARG",
  "C4",
  "C90",
  "CPY",
  "DOC",
  "EM",
  "ERA",
  "FBT",
  "FIX",
  "INP",
  "PLR",
  "RET",
  "SIM",
  "SLF",
  "T20",
  "TD",

  # Rules
  "E74",     # Ambiguous name
  "E501",    # Line too long
  "PLC0415", # `import` should be at the top-level
  "PLW1641", # Object does not implement `__hash__` (tentative)
  "PT011",   # `pytest.raises` is too broad (tentative)
  "S101",    # Use of assert detected
  "TRY003",  # Avoid specifiying long messages
]
# Allow "α" (U+03B1 GREEK SMALL LETTER ALPHA) which could be confused for "a"
allowed-confusables = ["α"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.extend-per-file-ignores]
"benchmarks/*.py" = [
  "D", # Benchmarks follow Sphinx doc conventions
]
"examples/*.py" = [
  "B018", # Useless expression
  "D",    # Examples follow Sphinx doc conventions
  "E402", # Import not at top of file
]
"tests/*.py" = [
  "D10",     # Allow undocumented items
  "PLC2701", # Allow private import
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.pytest.ini_options]
# Silence cotengra warning
filterwarnings = ["ignore:Couldn't import `kahypar`"]

[tool.mypy]
follow_imports = "silent"
strict = true

[tool.coverage.report]
exclude_also = [
  "if TYPE_CHECKING:",
  "raise NotImplementedError\\(.*\\)",
  "return NotImplemented",
  "typing_extensions.assert_never\\(.*\\)",
  "@abc.abstractmethod",
]
